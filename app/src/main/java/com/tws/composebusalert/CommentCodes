 this.storeData.getNo.asLiveData().observe(this) {
            phNo = it
            Log.e("Main", it)
            if (phNo == "") {
                Log.e("Main phno", phNo)
                setContent {
                    ComposeBusAlertTheme {
                        // A surface container using the 'background' color from the theme
                        Surface(
                            modifier = Modifier.fillMaxSize(),
                            color = MaterialTheme.colorScheme.background
                        ) {
//                            Mobile_Number()
                            MyScreen(driverLoginViewModel,this)
                        }
                    }
                }

            } else {
//                driverLoginViewModel.getRouteList("")
                var listResponse: List<RouteListResponse>? = null
                Log.e("MainRess", driverLoginViewModel.listResponse?.size.toString())
                setContent {
                    ComposeBusAlertTheme {
                        // A surface container using the 'background' color from the theme
                        Surface(
                            modifier = Modifier.fillMaxSize(),
                            color = MaterialTheme.colorScheme.background
                        ) {
//                            driverLoginViewModel.getRouteList(null)
//                            listResponse = driverLoginViewModel.getRouteList("")
//                            Log.e("MainList", listResponse.toString())
//                            DriverSelectRouteScreen(loginViewModel=driverLoginViewModel)
                            Navigation(
                                flavor = "driver",
                                startDestination = Routes.DriverSelectRouteScreen.name,
                                driverLoginViewModel = driverLoginViewModel,
                                lifecycleOwner=this
                            )
                        }
                    }
                }
            }
        }